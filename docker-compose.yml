services:
  api1:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: api1
    network_mode: host
    depends_on:
      - db
    environment:
      - RAILS_ENV=production
      - RAILS_LOG_TO_STDOUT=true
      - SECRET_KEY_BASE=a7c982873e4d55be7d85b5bd7c784cd1db0b9604abf2ea0ad9b267f6be52ba63c24c281f66596d9b66990d962cbf65ef48c54cdb37aaec93b2c7f4261fb7eed5
      - DB_POOL=50
      - DB_PORT=5432
      - DB_HOST=localhost
      - PORT=3000
      - RAILS_LOG_LEVEL=debug
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "840MB"

  api2:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: api2
    network_mode: host
    depends_on:
      - db
    environment:
      - RAILS_ENV=production
      - RAILS_LOG_TO_STDOUT=true
      - SECRET_KEY_BASE=a7c982873e4d55be7d85b5bd7c784cd1db0b9604abf2ea0ad9b267f6be52ba63c24c281f66596d9b66990d962cbf65ef48c54cdb37aaec93b2c7f4261fb7eed5
      - DB_POOL=50
      - DB_PORT=5432
      - DB_HOST=localhost
      - PORT=3001
      - RAILS_LOG_LEVEL=debug
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "840MB"

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    network_mode: host
    depends_on:
      - api1
      - api2
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "256MB"

  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    network_mode: host
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=rails_app
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "1136MB"

volumes:
  postgres_data:
